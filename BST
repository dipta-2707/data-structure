#include<stdio.h>
#include<stdlib.h>
typedef struct tree
{
    int data;
    struct tree *left;
    struct tree *right;
}node;



node* insert(node *root,int data)
{
    if(root == NULL)
    {
        root = (node*)malloc(sizeof(node));
        root->data = data;
        root->left = NULL;
        root->right = NULL;
    }
    else if(data <= root->data)
    {
        root->left = insert(root->left,data);
    }
    else
    {
        root->right = insert(root->right,data);
    }
    return root;
}

void inorder(node *root)
{

    if (root != NULL)
    {
        inorder(root->left);
        printf("%d \n", root->data);
        inorder(root->right);
    }
}
void preorder(node *root)
{

    if (root != NULL)
    {
        printf("%d \n", root->data);
        preorder(root->left);

        preorder(root->right);
    }
}
void postorder(node *root)
{

    if (root != NULL)
    {

        postorder(root->left);

        postorder(root->right);
        printf("%d \n", root->data);
    }
}


void main()
{
  node  *root = NULL;
    root = insert(root,10);


    insert(root,5);
    insert(root,15);
    insert(root,8);
    insert(root,12);
    insert(root,14);
    printf("\nPREORDER:::\n");
    preorder(root);

     printf("\nINORDER:::\n");
    inorder(root);

    printf("\nPOSTORDER:::\n");
    postorder(root);




}
